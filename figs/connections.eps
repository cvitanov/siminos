%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Acr6F5F.tmp)
%%Version: 1 6
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 15:48:12 10/02/09
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 660 327
%%HiResBoundingBox: 0.0 0.0 660.0 327.0
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3388 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2009-10-02T15:48:12+02:00</xap:CreateDate>
         <xap:ModifyDate>2009-10-02T15:48:12+02:00</xap:ModifyDate>
         <xap:MetadataDate>2009-10-02T15:48:12+02:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:96B41D3A5AAFDE118D65997847AA83C6</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:96B41D3A5AAFDE118D65997847AA83C6</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:3ac9252f-9747-4631-a145-ab1944d01344</stRef:instanceID>
            <stRef:documentID>uuid:bbe08f49-0d71-4060-987b-cb2bc9400f69</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 660.0 327.0 rectclip
q
0.0 0.0 m
660.0 0.0 l
660.0 327.0 l
0.0 327.0 l
h
W
n
q
660.0 0.0 0.0 327.0 0.0 0.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/DeviceGray] cs 
<<
/ImageType 1
/Width 660
/Height 327
/ImageMatrix [660.0 0.0 0.0 -327.0 0.0 327.0] 
/BitsPerComponent 8
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /DCTDecode filter dup 
] >>
pdf_image s4IA>!"M;*Ddm8XA:OX[!!*&R!(-_p#RC\A#RgtE$kNdS$P4!^%1Nd](_RJq'+u,r
&el#o'G;)o)]g%A)\aPF-RU8e1,UpH1-7QZ4$,Mc4$,P(^]4`J!Cm3U!<FAEs24o3
!!!$'!<E3%!<E0#z!!<3%!X&Z2#7(VC$P3:="9AT+"9J`3"pbA7$o7na!YGM;+VHL5
5uD&(,&r/h"r*2nYsKZ\'iMkW1Gj-(d6e-bP#Ll/nRHVt(8A*e-:F%sA4=A1F>ar`
<T7T\Z\66FFlW'_-^:E\[$ASZjRf:V`RX)C<b?N0QDV+1f&lZb7os>ILR4pJa4KMK
s4RGY!<E0#561@UP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^
8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj
,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a;!BSG"H@Tlj\De9[`d_om3_YGU)0g1mbW
F3Bs*"-2\Q+%q:c#HMuRUX].;-=a"HqJG75VQ/M)=h0NuEA"ZWI4c[\V*8T@8L0Hj
,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EO=\SOPi$7]+80[6
?tkc37d['7XrcH%oq:sFQ1^5]2V1H"^D<0o2][U[[it;.[D]Y"poa/U'sZ=N93M^^
#r"JnYL>Od4]_ijToRkF?/V$WesbG<QM[,"$S:I`COWK/P?"`eT4NIO^=KgF4^Ug3
_lg0PEH^U;<ejX;3tO3J=>.e9V7,PO)2Du.R=<71%JHDOV-U16[bF`5fjdC<iM\=h
Jj)e@,a(_EP%e$h=6lL/^5PchH)uGSrmT9kCIoPT=1US/rr?,HlTVRqiRMY_ZQC7?
3)T!,I>i'5p9n?B`iC&O@QPs@rFBtiDPAqf&P6X@oJPt&A!"8R\+J:#DofuVPC>CO
b/KHIpTk`tBKJKJU6]<7+4P')Y[c>KFV\H8QnjMb=_m^n[.q&jgNIQ@!].E))?0\?
F"m/'qWZ/eFPCq3H^]@agNtm#3]I/]>EA'?0*qNBm%uMeL4Ut#\d8fKPKph5]j6c[
Uln:pP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^995P<5M"\j
K54e53o1t5=NZ29NRX"]p=@g[>ilUZc1Hlh=QgU8)[E?+r;N=X<LC96%.mnd<EBES
YQ1#,B!]NdWqA47580lPDQ02W*FZ5K_NkCgr7uHOJC&]!pD'7lM^og/ZN*pca6(jW
-Sl\WbFRkoS*@?Rf'dV6G0eRcXdgm+Wt(#dXOCB(@r&10=OshZh0]:.P"?pf<\IGK
jn3\j^X:0JAXOMHCjEV?Ho>'9rTbfVXaaK"OH,1G7NG!XSuDUB&,k+[?hgXeoIcoh
2>Y;BnoG^p`lC;Ta7pG%mWZmTSQD]Ij4B:`?_Co\M3HLtkrn\r#I>;Zhd`2r^5deH
TOMA?iF5f>N8IC!(tu$(m+./kn5XG=(JX/Gh3E`<)/`=-F,ebcH_NGY50!til0p_M
:$K2)ARVk1[j:CTcF2?nF@PF$/8uptVe8H_bh1LsqC:CfZAm-e2=nG$C7V(/UJ2D^
NRPpF4]F>c[C?D[4^0&9'&_$(p?e'^+Oecpqe%^`A2:VoD)G0X@RprLmBF)4*p:1a
b<HHg[rqQ%MJo]b^:PpKY/"sscJi2@fG\O<k%[IMC!T>58L0Hj,a(_EP"?p^8L0Hj
,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(feqXW6Hj5>>sW"T)fQHQ@\WQ2L?3=Yug
2:M,%,6^j@2.<E4!:LNf*0!f.8MYCN9X/oAf,q&a*Suf_CE7m,*f7JVHp'Ob+2)2h
os<sC;q%F^T<_GbUQs@MZ_$1u\UWV=gX*Nm<7gFP<lrU#k8PE>QQP-i?b,&LYMaN*
RF9cpVde284-h].+,djq<mi5n>Y"j08`0WNW]sDOO&O?JqV?*PE_k@LE$L<VN&nfT
!#Y5VYXp+'9V!Gl8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj
,a)0=L(ujE"![m;2.Y55?gr:l5F#aW7a8CilMXhq8+jT`p[nBGr4I*T+.HZ@Kd;gT
Z$N>"+01qQrf1<#*IPZCU2I?1%@-?GHHEMZB@]hR#j>P=m'WI\Q.6o>p\t4Z>eff/
/a.U]Wb_9cX5mhGbi7X]X,l`o^N7,#?g7M6V=^X$l+"-2Ge&h.)"DnG'l>4Z=Pm6<
ITXVd]7T%tY-@LhH[2Y4^?b1d!&m4+]1bmj0QCgD`aGs<(tu#um+-sn*@-e>,a(_E
P"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0WQKR[M1Hd';e
A+e&hk0r6D./b12*c>dRY,O1rlG$R&Y4Qpa=dc[ep_`YJ[Zf\7f=B'KhlXXqqN0IY
H:c,XnWhWFl&UXpZ=!C,Q?5<ieM[3DeabKJH,[c$=!-?hIeS64^XN$L9Bf.'e$3Z-
nMRf2A&[=rX(`iB8L-h,\<$\'8`0WNW]sDOh:4<%rjQ,Bb_a:&Tu6*ReF.O4r\<D]
9<^u5P"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_E
bD?#nf6TAO\#/g*o."r]kuhi0A$Nl$3g]i,+e)]S[p=@nht=VI%o[EB"/Pc.3(n;g
S,G$,i/0%OT=n45U@hinYLXbuOcmW-/goqk7tK@^E;5]FVt>G'd[R_D@b$P!ju;.H
XRkj0i^kDY8L0J<qTEaO9ZHq@JE#@uZY-&CF&k9p?Z4&t0%UI@Nh;/'%P'mqa(&kd
UU+,H,G^Jo,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^
8X;kHqV1[iUH?rLc)b3da05-DPMtcX\]Z&OXoAB'3f&fKdG76(N39,J8\Z_m\`Hc!
U31pbBBp@9aN.fQ(D$1B,J`[?3.+?)=4Q/cO+h`]/gXIsO^"ii[A.^P"hM@iMQQPA
.bhNdGe"$!H?7trGji4r[AR@I_S;Gf0^rmiGn+mggtKRR/fW][@l3W@L(Q-2C!@E^
6\1uP;e'.^dati4+-.Qc,a(_EP"\CHP!B"=-a4N3U%KoUokaQ`XnRIRno4G=GAM#Q
3l1gr)"lNAltD_F1jGQ+HTJ'!Vto\j/,lr8DriINT3=F\<?(e;&=u*gYQ"SJK^Z'N
<7lAcYD#42lp$WS^ZVNF0Dr>trrBNrrT]/?rr<nN<]X8;19/Nu5&>!V<\98YNGGCu
[s#"`pIY5Cok1B`I=j_XpO@e"hOU;$=g\.NBGhErUln:pP"?p^8L0Hj,a(_EP"?p^
8L0Hj,a(_EP"?p^8L0Hj,a(_ER:GnsXl!3k42!3#lG_3S*iZTrHp'Ob3Fgb8^Zu,%
&^YhaU9jK4\tcqcr-\ceGu\_FrElR?onTVUHOi*GJ#^m;#@tNci`49pdCNCODVh"B
<]Q.Gf#uCYk$1p9P#rRap2AOkS8KeA1cHo!%pk<.KBCuiXSd;'p!/t-XSOc"fp>h_
dpj:EV5;Sc]Ut@pRoh#Ln$H/Q89qqU55i>;%VqQMmB!#R7clY-1[W0<Tm_WS[*=T0
cZ,qm*IYbd4k91g3/09#j>E_(SY5l&bffk/om6t,OjnBgLFd6>7t7"7ii8'B(jB]C
E-(X6LJs5qZi'-4-QQ:S:-jhVLrpW\IV)4kJ'=mp.>8jLngDr0l.BDD!26F9M#RIa
*72#Qa%cEHD:j7Jot.MMHEDps<HQhc)+-gLA%#%'2pHJ)hr=7(d7Z3de2jGUf$ME9
m'j6NXl'E6YX0ji`RiWHRrFpF]:5t7cha\7Z!Z"1WYGeX8AmaDX?6E]<Mk1IqR9_r
ku^ZO@iiD_JhoG87]^I1!u7TI['1);PqUf2-iW(7rrCeIrrC-A^:X%kT_84tYqg!0
("I!)S9D3I3WkkU\2%I[;sE1;^8ggu"t**bgtj,_I96FKT5NYs^]6V2#6?kW,a(_E
P"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a,:Z1U6do%K/XGgF:.Ef%BF<
M:9^g\G1J^lTQnK6a-.kR]4C5eo]\F.'8cEP/c/JHe`f1Wmp:h(Su5>mHN92A*L&J
-0P-NFL\BN,a(_M+0FpR2D-XfW(ig1-'u2'1r&[,2s/Pt6^m_(0^`GdF%G^)d/GMu
;SpDrWK,32at'=FTR/;6&E#Akbp.q,hlQhX<r-S9(*62`6GQ1bnb;/!icWhsJ*N95
D#InhrrA6D.A;NT\rEGXrr?n;\]K<CqU:iSDsIhN@HP:r5R7;E[U&YRhl2#Aj?KR_
SttnZm(;._rr=pQX]ft?-`,`1\6*iMrr<j>62TYA\L3Q'@R((+J-Mg@!#j(]5>nc4
<mT"dhg8,AV[oY[IVq#5h-g6_N-JWc8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj
,a(_EP"?p^8L0Hj,a(_EP"Uf2jaZZhWJC.=UGS@`l==i_XT"6TrHEshVdT[X&kO@3
8IHmr)\/WlAZVW"bO'7VqqSa]U%O`gX't)]reZDme_P@K<*rX:Zjk83pKM7WpFP4%
VsAP,l),<Pk&fmm+8.W^+o*D7"LOM_&`_$fYNg=%F2cs,fC_e+Y5I$[?m#'G6Pds2
2DujjX@cV_#NjO__=obh7$:+eQ7pfn1,>8WolgQ+b3Kf]2i_[I^?gag_7D8N$P+>W
i_tJe^reCag8eoReqaUr,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj
,a(_EP"?p^9"oId5>K,25:tV<a0!qFmfp-j>\DTe1+fC&]q3m$lP=oFi:>%#U9Epk
Co!4cCVn9[?WfE[97PX_[,$sqN\3<aDK50uhEG\HXnB0(LrZO0LQ(]kQc8bg*oaHk
Dp9(;lAnMJ^M<$TVc:e$f$/E>cgKEW#McbV)V0Ws#.;#HN<&_V2s"LKFZ>GeN5$T_
WjAIl(cOR<(e%"AP"?oMN1=]VNS/K\MT7VYi5Y``<PG>?Su\KOosWg:h)Kg>&]Q\'
pXh^j+8?#l,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^
8L1hG!3S9[fBP>f<2q`Qj#<s"g5;Ht3fj2Ka4qEs3sZf+P"?+-=S_ss=n".`3&jX=
WTSHD_]-dKiudnq4t=&.hlL+!h:=?:9Z;+&V1<0p1t(03rr@INSN!>9^5lF#VW0Fg
*p8)-GP/$mii])?am8me.kommo_+&P?tD+E!^h04mq&SaimP6K#pbZL7SYi^7f9l$
7:V\<i5Y``=X36-5%Di##88Jd=:>k&=`#;]!%Rk(Y^S(H>o2h1<S&lO)kk^JCW@N2
aH$F5iIg5ArYO&pX4[+SSEfJ+\Kh#::jK_OR."\d("'=q<l&'Y$tD[_XUkL'!D+Q"
8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(`#cHXDofQZN?
]4DiP]%\7`eqlUK`r0/?,3lHpp3TGRHGuLiHVZNL`>&pKZ"t\k3g\E&$lf2`Nn<q4
o:p9p7e_Q8!!mgWnWd'qY.`Ebh1$[933N8]]_iQW83O,sjSTq)E-c[<9V>m;qAG>j
r7](bRu]0d'k&AN8Kl6MdX%s?[<W;Tr<mVN/B5,mmDZ5:do[M"XlO"iM,Cl7el,]4
p:)ilH_Fu"cE(ik\t4P6PLaRT$,s!'Jc8sDL';%XNV2&+l^*`nd-*2Aj,^S.7tIr7
_=CbH?Vl3TA(WPXCU:&&&+KN`k4A.R]q=pu7pU8e_-KbD@mi2V!!#-3;Fr-s8L0Hj
,a(_EP"?p^8L0Hj,a(_EP"?p_-V5SH8L0Hj,a(_EP"?p^8L0Hj--#n)a?<n0@=;%L
btfQCW=cq?VbM<+prA)^jnAb]qQF/g]c!JT=A@@r22tGiFbdf@[pPTKq`!(jX;^63
h&!!$rmT;..`"@./E)-S%9C5<krh,(;>,I06YKp)A8:;"(VIq^o2a:2,a(O9aN)5t
h3Db(XE+2C)W/6TZ9RMQ/mHR@$Pt1lg'eXQ=VV&:X6bQER?,f\ZlcD'_o]L(Ji`9h
-Z)_Fir!384cONkZok_;M-XF0e/ta`g+mu,D!K[ur&7Gt]C)c<5No8-\uVZeWg5QO
1dbHn)?B7,.AW+u,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj-<WQ;3i5D9qRN6K0k8hU
X*&cBJDrp^,Nc5U2cAl^>'_e]lIi^iFZ3jcI2NN'@!+<o)g8K^2fl]o$`WDOO2/WE
0"NXXF\UX>TM:L<BJ>EGNjbh<[EN^G*O5GVOsb%?^P_2/Ir"^.m]D/dq^?&$Br.-#
X`iL/fBV#Na<&@iA2.o4WA9L-NRI32Njg4A]sg?r&#:)T][+@/?:cE*8L0Hj,a(_E
P"?p^8QX3^a6D6#kN+d:)"kJp*T5M*.u*8R[[^%+X^,f2a1JB:m1qb3!kLjc<@>Vo
_M@MbZh9+,omX6"K'a(Ia_/0Erp/!^lC>4B=4Q`0dL37XY.lU6D9U'bV9_BW4F@4Y
8L0Hd^A9R!2e:R`CMtl2_2\?J$R>Xn@H?'Ska;0/@aJN]P-aD*r2ZHtJQStJrHIP2
Ec/n\<'-CF51Pc:"jW"Ga_5,]5l/5aK-rgJF_m3>)lQkWqj:faoN+Ie<RS]`9PYKm
%;S3/%j2ZIp$T<L@,cTCU_@Z7b-*8K7$C!!VgEl/FSqIs?&Z1N[^QJri&Rq[&9S.N
,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_F?U%4(OuX7[+6Jj0imdnPnQSIIfl$(-
^BL_2.<$%^STb;urb3&D'n1^a3jnns2\u>CjE+l$SSq?,p"9kVe+=R1!8UG(l,f4J
,cPnBR86Np5*MN2A`R!ZCS!gRm3>=*d@^J%Pq;Xi46mDO]p)^sEU1\W[PSGdh<=4d
cfXq*8L0Hj,a(_EP"?p^8L0HjV0VgerjMg2IQu@XK#,rQoc&*P@iZ;m]#ZJ'gBN0E
I4pAESgW'dA6dERood_PEga%/!Oii#i)a"C&c9jX^[=Z=ORKoB>)h2nZC9Oklu6H`
pHlt$!1d5;<Z4"?5#5:f(dDQ4qI'='.d-2,<bgk@?2C_7(?9Kd?-=]>C<2G;kA@;J
Q0_;F*<rQ6:Jqu$I$+CE5/V=]$M7a'QUb%5;-9ia2S.TcXC)KN*^D0MOp5eM3V[gW
?7)b2hc5<JY6CipX?WY/G1k5t:!,8YdI"9<?Tp:`@JR6EkgE$JP"?p^8L0Hj,a(_E
P"?p^8L0Hj,a(_EP#_@6oF.AeRm611angko!/UW<rr@b?[us<.P"?p^8L:"Y3p06%
<msN\O0/41%&=64G^IZP>&.W$l,%9)^!f#ZPZ=2_l[D\>TF,OZpGu`Bfie&`a"$sl
\Y6lJl6Hpj'dSr6,a(_EPn'qI\o0sS3Ls(Ad9+f&X.Je9@n*Uc"jCUiFj@aWG>RR#
Zg.Pje`p7SHNDllO]t5EkPPuhLFS)/Srm%Y::$lWJW4;@J$(76I6'U.f-aMa1/Ea4
)G1fO:,PN-M]#6+e@rs-[!^[1A"Tl*=Z.7KMag3=\/6G#Z>0^@=$(1!Z!U*!n(!*I
AiE#LgpMe%=Y]G$=SXKBIo&08<XbRq/aE-V?WTDQi")*!0R_->WiE#!<D+98)Bl1i
%;6eJ.AW+u,a,!\dVuFsF#3@?>B`nb+-Gt;V:E%_+hRmsX/RA-8L0Hj,a(_EP"?p^
8L0Hj,a(_EP"?p^8Lj[+q?Ban9qV))AGnpr!5s@YrrBp[>KJ.R8L0Hj,a.9']05N&
qRZOUCiJ[i&AUO`5+T8XTHO2GaND,oI9dZK58g5rejGu$3_uYkON0@u];jPHeaDYr
!LrU/A[tjp-*0%CoW)b2>"KljSTGJ'Za7BQjQ#mfbdsdWm6)sGR+\i+\BahM%]Hg"
PAC@t_//(5eK8Yqc`4#2CRb$A<8up"Q@eM^N=0$iR^eMP,a)``oe3G5=d\W8oj3d1
qNH$/o,,!oGM5.Y!$l<WdXJ1$N3UqpmH:MB?<_i0.\_DO*j->Bq-!^t>qc/]e?JqN
e4HY0S(,OH7;i&EBDsXE?+0#QW]&`-;,_aeg_eH10GZ\Ff7fDsa69m@Fc1g&0^C'i
J!G)`YQ\LMPP*h5O42dAd&;0NZh:turit3[q((*iir9"Of3l_cT!qeB+5o$B2Lp:@
<f@.A\k6\7*jJ]RD,n&7Z%+^,hu]?=,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_E
P"?p^8L0J&e3BU:rrC!jrr>qt:Xi2<8+`GO/B,8b8L0Hj,a(_M+09l@Wc_"LR;NS2
B26W^A%cXtdf$:p$O5=W+%qjU=?9MalBtp-lpg$C]fR[2Nu$C;>[#a`f%m_qp\@<"
1F!F3jE6tNZ0or8Wq**0Mgb58'to[^HTDFn"eD4WA#N\]qMd>CQY,o<Q=T&>mW3/O
XOj_9gKTTE[\,L='mo6N:Jdg_1<ODMfp:Am2%%[.4\KU.Ct6dHJ\"Xb(G5I=.YbXG
rM3Ya9+S0gc*$@_X(+eGnKc4[aX!%Ke9[\s8Aot$;SAII=7i*Up]8K#6$$8ArrCYA
gZnE+KMOg&1G-=Jkc6pn>pi>1>sG)n1BXLNb^(/E(cac44Hb(aZM/3GT*<3,SZUtn
K&A\>eXs#?\[hZ3.f=1Gm\OU%mg].`95A1KWgg2hd+81HD\N%UF?8e,4]'tc1.V+5
pR>>NX&b0$Ep5'NS9i.R0st'<)TDd.J`Hm$8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^
8L0Hj,a(_ER1/.Q#mSr^1a';AQeHHZ!7J4OiVi"hV]Yjf5L(A-QeHHZ!7J4OiVi"h
V]Yjf5L(A-QeHHZ!7J4OiVi"hV]Yjf5L(A-X68R(S/d&2@@F:qiVTH_I7Cr*rD;`1
Fc6H50G%Ii#@B@#p7-X)XT&8[IsPI9a8Z-3cguqdV=pF/oW8&m3.H6]Bug5R9$d*a
pSISRJ+TiB!'#IS?YRR\!(tT/L\IY=S:C14rr>$.H=(C,rr>[;o8!(:p7-X)XT&8[
IsPI9a8Z-3cguqdV=pF/oW8&m3.H6]Bug5R9$d*apSISRJ+TiB!'#IS?YRR\!(tT/
L\IY=S:C14rr>$.H?NRebVAL))SdJ\1=i$^0P!t:Xdar5:p%-9([Y_e@+aWugrBXV
qafY!A-`c'*\#N>?$GU/*@g4Dga\rGHF:V'_4ZeFf<sBgK>ae'46j7D?<]JBf%XE$
SDSH+XWOS&q,YE*Sc#B<SKs@i,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^
8M]@UY^Ks(l<02E[In:Z[kgdQe-<%pC&H-"HV`Vjie;k[I]M()=R6C_E"Hii\^,9o
k8i?WJ'?6=ht^DNr@e)3?h6)=\,KE,rr>^l!$mp/bkeIA!0rfK!7LlIaX-re1Hqjh
j^g[K^[asGbg3<Hq,pMl0Dpu?o/#[@r`2tt!)*=l,_qTV46jFtY'YJ3+jI.NUi+P6
TB.Oe<kbU4?-E)ZJX)LO<L6oW?";^%9=<C9/MHpfoiqFr.k1JuV>gOY9E&OO<rW0B
b(&Z*jHBNCR@dKoo!4na?hkt^k%E4_r2cgqQi9Q0q3gn[rr=PurrAnq!0U"SApm_[
!6WH6l$qcWrrAIZ<PS+1TDDpj,erJSeSkAeVuE%^8MBn-oiqFr.k1JuV>gOY9E&OO
<rW0Bb(&Z*jHBNCR@dKoo!4na?hkt^k%E4_r2cgqQi9Q0q3gn[rr=PurrAnq!0U"S
Apm_[!6WH6l$qc[B34;H<cK[kVY&`-7V>cGdi0-AL5tu^n+O#eXSSR^3s4c>)%@%a
3rO)>!/W)p.j(4rflUpRU?=D,\\p<*,b?0"R6Of"T@Q,[oZsMt156FcY-d`1Wm>iu
[/U+crr>4af]Z[DH?VWNc,C1%,4B\E?,qBf41hS>eGM:0M:+s@P"?p^8L0Hj,a(_E
P"?p^8L0Hj,a(_EP"?p^8L0Hj,g2>H_=`R>WFeB[f@?o[g<D[6:`?e\Vt2E%m6?BH
M=fYoLXL.pK7qL7[o,ea4iceMkIZVYP"?p^86LGi1-ad"rrB$=bke3pc`5eYc69;,
bp8JQC4!'kAS&]/bq:5[!.mc3Kd;gQ,a(_EP"B6XI]m?0Q#tlP=5*MR?C9C*L5tu^
qlFPcqR-!2^4fj\3EH*^Wb)h/]Z5'Qfo5m\2m?MCdSr9:>3W^2&E`XIgI5U<3k=GJ
=OF11OBh:mlX*q&/F(HcV0!BO0ILa5;";UOkV3"oeTG!(\G02!io4"mBW7]5f"`3T
J_0sfGnjP#Pu`)iOp-u`E>,d.@2T6:'gCq<g@*Hi"mn>fG7GZtEf?/Q,a(_EP"?p^
8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^A]XgXqSS`NZQJjUlIDA@At;;fNE_@jq3@QF
T>T^-qJT*Gkr<Lq_IgsFW@(b1a6>bM]8EtY8L0Hj+_CZR7)/^Nch`DJ/ra^-hbin7
0@cGWT4m!4`j"IRTC"tSd/#Xa02:]V]!-5FWSQhWOS`3E:AXQ'9$^2SaNAsI1,_l[
8YN#c5V3DHrQDs$?:cE*8L0HjAbCMUAgN^ahO.I!qQ=.lfY`H(p=oJGC>&HkokM3p
?(!]RIBTY_&F@W]Eo[%UrRNp3>H&e%FZB%Tm"`$LfHnjh%;6e.Q-A(W].^5;lp%J:
^Me'Q?drt^n>\U!4Um'h2-K0N<3"!^*FGr*m]G#/XiS!Q>r14VYG/l.X5.Eje'Vki
(KUE9=DP#1odssNg7&2T/q/@!om:GS52;Z$BPn8C^SpoYY\eI&COtTZIEEQbhm7V=
4kGJBC[5iGL(2^:IGX-PnLo1t?$E>TI?Z[bh_`$JYkn.adbl5HQhO_l03NS=cfo`A
d%$5RDt9sMCOcZK@oudC8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP%D`5
@/@d/e?^7iC[0H>/S:P@W/Y#?e+o8kc):(+nNNGkE;E<K0Q:1#[d$H7cZ/eWH1'[o
,a(_EP"?eZ3ON8U=^__KBs<pc5Wu$.<_q7H@qGU;l1E[IF`,68/7YBu0MJmjD9mbG
WV#O.S8303[FNpb]?U?UUCNTQeh_3Ye5s)N!grlu8L0Hj-(!0Y]pP,9dlM>QC[/H[
dIDu$*UU65CDsX1XaOEWTiYi$<M+'lR?6dZa)^4nN;_<dYZld2,j7?k02_T-ok1,5
d`Kh7pIkoB-L47mfiI[B*l%BKXF#6u82t_'N6\MQ+U>W!fe5QI.__`82V-u<C<a5i
>gp6j5P/':5KUrXL\ju\>,eNZgJ&)nFg+4M^`(db!!\<r+6s+@:Jl=2`Mo?3`bef=
\j->0E9iqu4O&k#^""i4G>68tD`JM79`G)uNc4GSk]m7`UZ#a&k>>RZrp.HeHV_K+
'KR6P<Fap0CCOA,AR0YM82/KZPmM.Lq5-"SY.*d9*@h<)^%nbBq(ijKk<&V([!^HA
8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_ER;tMo5-X0l/B@]mqR'qY=f5*]
"'4G=rafV]C&C.W:T!d>5*L`F/1,28RZ_f7gjYIDHap+J,a(_K*CI#P?BqC:AQ6;?
*pqN#lnVhE&$5RePPZ/lAn@"Rg]fW+qc9-_'&3*2/=k@"FN,@(>5Xipq:f#<r7pR=
JbK)VSRh"iO0]_=oGUNbLQhBQUuc)h9t+_>pU#\.G"n$Q&a^il'<dQ09E+u.r<j8?
W]H+A-Rkh_er)'gF,<+L29aP1XoACFJ#_E#"Fo17rrD:Oa6Gn>POrj$_;NN)!e9UU
rrDXLUU5K-bf[]"Q#P47jPTQ"1L,C4eS77^=l)C-Yc%L$S,HZuqS1T$_&Rd&Wo&R`
#nE<p[_Lu$j]2lJ[MpUnK9A(iG\>FGl'DnceS?Q1f+`qR?5`C?\n.OKmC)-jkO*%[
p><#)dG6G^rV&6!["$M5?Z5f"rrA<DTDKH)!3"F!^;'?DXPA8k:JJcNDIeX(AaZtN
Du*PQ=rP6>Y4OBJ+'uNOZ8)U>/EUP,]-B)YFk8Tr@/b#FCO6&hrr?I*EQU)*ooIL7
k.EfKg&D%I_deiO:c_WCT!+EOeW4n8jLhhsb5F6#StFCk7nIUTR>46bM5n"kT8<VA
]TPi3P-9k%?7YDc,dit$fPCE9^"U-.qSuOtnQ$BJi`7hlRc7[iS*@/EL,5"Dr(*%B
n5^/n,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"@Fi5-THDbj&>sI9QKTB$2'i
;<fB,j#$aHB>(54q!_%Jdr>.Y,;??iZDMA.e^&73:O2BfXX''%[WbWbl'6Sn6R'0X
q\pOhrDC]4/:mJTW-'7*=#t2bep,E_rEbPC62/$>'E8'Wriag/lePUi_Z\uW&$sgb
;Z0q`J#DoKMpf#K_lBX/Z8Ym8[eY.,Zm;5@8ODU/WNt0?>9*E$p4?:^O44\?l$0m9
bS;+t`MJ*J)I5Br\<9E/P"?q)qS-+<'$@du9WRQ/="d6pEPk:nD>i$CD#IQ6[9l8'
bab.df@;Z?fm/V>a7gJKXD_LU;Fr-s8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj
,a(_EP"?p^8M]?jY^Ks(l<0F$>5GX=b8I3Tl6B?i2#_&sF(tP94;4UagcgpXbUb)W
WLAumF525.hKuc58L1XRVdJ[o+H#aXS):&eeH9C/5#o$ehPbb8>5HS:$u\JNGPFfr
].LqC^S&oEWm2.*DNfcmg?iCVZT1$KLXrbY[sM?M$XG$@8L5;m/Zn\-ke3gi4:'^>
:jR9g>qZDBRuUb=nX8XHcMBp1H%6W_P"?p^8S.RDYAPr"FO$:UgA86joR(Yr7shB:
ehq:B>5GX66a"Y'Rm,HRo&88INoe=U)>gLR@(0$*,a(_EP"?p^8L0Hj,a(_EP"?p^
8L0Hj,a(_EP"?p^8L0Hj,a(_Sj?!;@?d7k]Q@3!6[:*p;l-t$;F`'!2pc?`J:Z;*W
ds>=R8],-M'mhEBVKHt8IZrW8\>q\siV4_,hB.?plCE:!FGOO/L"R5k22b#u0!P+/
[d3Nfk+Ab]HhlZI%L^$,\?dpMc2Rc5^WNpp?U3kH*#!sc(;F',I(nd9j]Lb3Ekf$=
"XnSG95D1)"Lbq[n4RQ056SF,_sg<7]KZP-]>O,7a=j_<gD_<[Xj1YP%@'TOmT*+[
kZBjuB78GIM_&rM$]Oc\(5CFcIL0k8LZ"KMG^]s9GDG+Bf6D`ND0LcnQIgA1$SST(
HZ:X<V=_pEf@@2!a2dPohV3O&NE\VJI]Z\uX0X0#caEF.aED0*\T.SfGVQm`h+8lT
8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0D'.2asF6_*iX)HpEN
M]O7X>Vu\+21LNkWt[D!OdB9WG7`!!RL).LIk#sCh>L[Ym,.c"^]+9\W:bY?rr>s.
*]MfaVH-_Z3,!JHjj-+!@!QgS_.(md1Fqc#NOPh;RF(eD1[F/`?"R*]r^@%9[?'W+
MQcPYoj4PSUF>"2li,@@Z/0$!_&NCS)o&H2]po$%Z$63JjO4&.`p`3emq2S"ls9Vk
q)#kV]DB5<ft[D#J,W.qr,2M;IeI^Z`S^[qP=toU)o&H2]po$%Z$63JjO4&.`p`3e
mq2S"ls9Vkq)#kV]DB5<ft[D#J,W.qr,2M;IeI^Z`S^[qP=toU)o&H2]po$%Z$63J
jO4&.`p`3emq2S"ls9Vkq(sYKnU8b6`4j7'10Ii:-SFC8C&V;]qPEj,U3.!I>rstg
fj:f12=:mp[>gA426Qu`XoAB\hpq2Pc2Rdr]Dhm%Bn,/eom?G>J+bMp!;r9mptbmT
rTrG?Mnf8l-C=]jIojC32u`ken,EC0V>gOThpq2Pc2Rdr]Dhm%Bn,/eom?G>J+bMp
!;r9mptbmTrTrG?Mnf8l-FC?;eXhorIFh]PlZ]Cl!m@]mXg!QLh<uW0P1E2MP"?p^
8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8Ik'da0!s"p=ELQkIoq6
XTQ*]7Eep-UT/J"],0aE33o3#g"#YEDDO/&kdTe[n%i8n+&jq5E^s*o2SZ9b6dBRK
34/\c^t83o*sKBA8L0Hj,a(_KrBpDc:]*qZod+/I7/m8*InBY?_T`!0GpJPE,a(_E
P"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^9X)+Kf%a#iO?-t_
:[4KNi9\;"K&Pm.rf(dd.[<4uqM/@]\_g[GD=)&n=%^LY@TV?2SaCXA7F]ppFOo0G
@r#QW22qSm!S@CJP"?p^8L0Hj,cgSKkSZVT2Lj5APP#Uh!"o/Wrr<E]D^:K;,a(_E
P"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^Vpr;U:[%SWc0BQ_
`hAp9js9^&aZ`"3V^q'df'dNQ(3D0jmW.Y+RsTYCR"(T>rSsp5khQK?oGhq5dqKQc
405[`XKgU;A'V5-8L0Hj,a(_EP"?p`/7WO,X*BrC(:\UATgHW5`p)-`@,Woia.]2l
<[@'Gm3Ijr,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^
8L0J8Vs9QeqQ'J=<k?SUOridqN/7,2QqXoQ<'@NOH^27,8L0Hj,a(_EP"?p^8L0Hj
,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_E
P"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^
8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj
,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_E
P"?p^8L0Hj,a(_EP"?p^8L0Hj,a(f]Zg08HYH*(Z`lZKip_Z.!m-cqN@bY=4172ln
:>FS%c-a*5ESq<AXDYT"l0;OnUii<7j6#M&YiXD@Gm%7'I8<;aQG`"a/.Qp0gOLM6
9Ik5`Er*D1Q&g]]O_(t5=Sf:-b^>1IF/h<<2-_Rf]rWI6i9d;-KUqeZlK^KJrE8q3
2\QuMiT+*\nc>cL'$D0Vmr-VU8;T(D>uU']eZOaoDAQ<sq^qHkgP[V_hfBiBctai2
/CiXG4<NB6Fo>sN=4D$M:9hhdf6V9CY/`4Y<pT]C>h0hIrr>d*[[.(7`h<dD?e;9o
E;I2+:.AjI4f9b+C)]).+g);rh_<r^hFj@q%N!Y:\Sp%`X-d1)qO:3i/U4OZ,e%o7
I82Ab@$XK0i_M't0.Mo#>I/@@l-YJpm^;OZelE0K@A&eaG$4hFp.oVm<PK%bLYUZ(
WdF)`_^rs2-Y$ELjg@'+FPd_qj)p+*<Xq&j/][-Z'[l?*Wt'8p>@7oolPo+DJ_!IE
h!]M"fdODEB;]k;76,NOY1bFPATh20Qq7A&hch)SRI*3$QAlBc(`#ou:5OgsB2?8k
UF(`$bNiqKo2@3'/@T+o(r-9bc@F8-E>tAn`p6n`0!"H=+el&MqNffB27-=MLqGda
d-@,>G1\*q$lo\YS+V[M)klEe\f55J_6*-R#.lCm4cS57AT"^$Y![c,1Idqm7oZG`
e'P;@(bNn`P]grb]"9DrSuHc]obhN^k&,,<DNCU>he(tWep`a!*SKh'5ba/U9AJl-
Q4mcpq`(^:FTKg4X6h('_<#?AAPn.KZ>s6V[R?K8,e/T:X_U4DSECG%cm5.dX$8Q/
(*5D%c0KI0bM.YRh"hJ'=(lq"\2)4_?`@:c""n2F42-`R:[<9c+'.t/hK(m-EGMl2
$L#5BeqOVmj4qg0Vqn$oE80iC$j^BlAS+/*_ek+P_9U$@ZFZTbOPI0k4gZs`8KOXX
AYe_cU^$7X]O%qJoU;_V-HkD\pMDu59*JsFY.:7<WbkMZa#l14kiaN_A(C7alK.Ck
;4?6Th!3X*CjVQH=Q7Xn\$^pn[F$S.UqOVbcp7h=Ip)$[_QQ)Sk>c<23nmq`51_o7
h,pA0Fh?D5gRGWU[)`eYHbQanf@=hdD/HTPFUWKTeWWFF?!IW_b5M!6p2,#S-/5-)
:XTTb8,CD(6U&cED/%4+<^n+<;+7V-&$$o0HJ86,X'KYJ25DtX8_bQT2KUP:4Z]+\
JRsiWmVQi\Y/=0[A8JEl_[T:d[l8)-i(iFMpBd\IriceMW5ZVsqp&e")$&^QD/ElR
[FF>"qY&H>Rr&ZTh;Rbq"gN4#A(:DEHYTRXQe>liCKf;GF.D9`!%b4tXS=dR,<r2+
bH,n`Utkl`.CtF4Nn@'LdOYfHBca/-U)j-./TcB!]W<9"@;DB<6QXs!`@komlti)q
ZSEZ6dK\se"S)>c#$+`k<*Qs![n,62f5*N"o\S_bg$-$6I_p9?7mTJ^lhr1Ye1A@E
.]q<lDI_q5oX!df<OT;oZEYT[_HWtj:mXlAr?n[`rLJG>+'?+`CjR+21u)kfg<feP
_6;TT*URqh'JM_VFAAfNC?bOgaPQ+2b8AhLSGLF<<nk(ZAamS(U!d*4")b-Y%og@0
>Q2T[WTh5Sf/%Ii4"Y(<[s`2KG$*F5TYW=]Apn@We9$ZKX,:2I3di@H>?PH1NJAG/
cd@njH"i1?$Qp*:$8!91SA(n\LQ>qK0#bROq"Ij,3C$Y_2)5*$XC5ljcQ;!Ndqjk0
X/tsZZVC[I38;!o[Dof^:OR;u]'h0b4mgtjc"i.T>pJ'2=<C[,-WIL]FSr#sDfb5U
N,+DJI:_06D;0IopgJ?mkq)R[[oG?Zm[3A7FQU<TFd>4[gaTb]lRQc-qV..sqBaB$
\jlW(,ET8F8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,aSgMeJ@h]XM7jXf6Tl@
$`a/s]KGT6jn*tiU;pBa/p48Pk-o.`cf^+G[<h6O;ongmom<WHiRrB%:A\,HDenTN
Dq_6+[MreZH/#fLTtG@m7Efi]Yc6qo,LjNo=?SU?h3D&7EQ7Z+_<NppXP9?$m;7f2
n1356pCDV$h!5tblIXTgF>'_d$PNX0&*gi*rBcHoF\JmcAXN/q2g`I@6*jDM[CjD;
J_RQkF^%&E1TeEih+e@S8A]MQI0X>\ca8erZM1p8d#\dMq**n5&*f)C3p';`_6^(=
IoIFu%kY>0VMZGhDK*'!>Q!Se:<*Q#I"4jX`ims`^T=O/EB4V'ZT>-Mflo5%XB,U@
4Y!&tDekp>cOJ::7.*.*>V*%i:JJ\RUXqm"aCPmtWp8:lYm7Vbo`VSV]/Kqu2b+(m
[SEGl_Q0[.r19I)F)&mqb^1>H"+tH)@uEn]9HOGaoo+@#f(pu3'<:\:hjJ=6XgrSc
M_M0PI;Z0t(&IX5+ebCdrekaF%G[5uI]k]]aJ$*[A`@;Z[F8.t;m8"A@qr1eeWj-9
;B3bjdgWM9I@FZ)%aZcl4YJlTbY0s.2lYTfL-:i(;e^SmV\llB!)^Se5=-C$NHs$5
RLRo9oPU^de,#t5`P];>VkE&AS8=M&MVE9\[jJR)YK5MHqT(khh02'=f5gA,T2b)9
mML+Vf9(i=.^Jft[+U@[feud?Mf#c/&U7usXnF^j2c/1%k`<pO?"4ru%jM;XUPA+n
5H/5+.`WQrL2Mq@""S)t8:6hL[m;qKBC.cAraobT:U:\'nF<N]a&u,rh+a;<D*FME
_:s!752Ei'J8lN5iFLmC^KCaeDk('n:TA$T"NB#IPu(f_gtu,VXj,dQY!a;VN=N.M
IE)jS)8<5D4!<UA,W+3a2rhH.F,4LQgWQ'I&g3Km\7G8+*iGXZHKJ]klt0$ll0[`f
pa,S/UM&:GZH)gUOI'N!"4+B]4-%^jeZj&Xr<"h_[f)fqloSos/gL",]!jL(%7\2$
0%Xq88uUY$GP1s+R<MH4W`t7F<ON8aHYR]sA(adfqEX'-\DI1DF$lGtF+h)6icLcd
hbu<iVe8H-A:]_sQ!Q(17@@:]FkH"7o4hj</BQYSek7"3[A5t2?!g@HDAQ*g_e!\Y
\FeBOC1H(0=;]E3`n9e43!b?b9'7nuqR_5gqOK8`^IPA<AmN!lA*MI+p>8U-DG-o(
BTUn2f7,/iB^'q7bY%GHY]?+Eb3BI[,rl_#jZT$B-RPlEaMuA9L4TNnFfbo5C08a4
E;EmA(/IWG_o),HY.VnpU>1B<Q2S#dI$8EU^XOoY;XM79He\TIZLLl[rEoPBqEM:V
5107;m@S%a0t7!DZp/6mh=dD36e`QXGOg1)`^`eh5I7]qX]LPGe^U.W>LWbU'i`EC
0"(\TB#/B]rFZ>BXWc'EF*AXVcc#+YQu;/5h*12frmGFVAjm6(Xk7^Le1@`h^A=?@
hfD0e%YdB5h6+#:DLN+k6"m^=Z1;Z@,W3le\u_4&c2knXk,l7g`698<03lH\]k7^3
.__Nt(64lNe$8EoI0SG5S*8+MZM.><1XR;:-=*9q];;@lZDLb#h+O?dk>qPXbTobq
[Q3`;j@EP)\j''5kgY#ZZPBRB)\r-cl?3O$@;"81`FZRG(5lC2oc(D$TE2a"a$T+#
rmT38`Q6-bp1&QoZHT&jAN"t6_aX@[XC<`![/.`0\'t94DPq%uKo+?"Xnoe==&6Dn
i:NLXZ>=UGF)/.Q5ger3c63(IlHk!DJ!II=SN!Z_FSnfWe#p`4\sH=+fA$!lRn[%f
c>@_gUQXcl#MY`YRa0N7-ZukG?THYKinK<TKl-TF(^D]I3m?`I["^HqB!0@9$"UA^
0,;)gl)EEIW+5L<]8N/3r!MqcB2?^g(Z+:W]'Ose\*WffkJ,F<')h0,O0dT^"`Nci
qYpOjbe'e+<@u,3WnR]A]sTou1$kmCr?-*'gi%Y]\Y7:K3Po%%j7Mc7q`=oFeX5c9
>rC8Gh*AQX<NO$BRp#",/2lt'd:dT+cl4Tm4)!MY%j.j]p0XfIngj?Y`cbqJXN!Gp
3BqBQhKItkJ#8&3PO3SbG>G!mFbA1`F#.c@LLZc*c`#SufIaYagUc/eDgf$"kM6ne
(e4I1@F")A/ACISDT\mDf@a@KD&\2#S&bcWhVB3Zkp)F'P"?p^8L0Hj,a(_EP"?p^
8L0Hj,a(_EP"?p^8L0Tb4X97j/YbM1*-$n:IPY8rF7CREDqY(=*H@f4(A^>!J9L>H
[Lu.WP"?p^8L0Tt6,rc1NEr1JFQ9sE^Iit$@'u\gIBXS"E,C&sZYNbS%c%1tCF#'7
,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8L0Hj,a(_EP"?p^8MC+s~>

n
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
